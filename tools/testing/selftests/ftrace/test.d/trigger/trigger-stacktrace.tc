#!/bin/sh
# SPDX-License-Identifier: GPL-2.0
# description: event trigger - test stacktrace-trigger
<<<<<<< HEAD

do_reset() {
    reset_trigger
    echo > set_event
    clear_trace
}

fail() { #msg
    do_reset
=======
# requires: set_event events/sched/sched_process_fork/trigger

fail() { #msg
>>>>>>> upstream/android-13
    echo $1
    exit_fail
}

<<<<<<< HEAD
if [ ! -f set_event -o ! -d events/sched ]; then
    echo "event tracing is not supported"
    exit_unsupported
fi

if [ ! -f events/sched/sched_process_fork/trigger ]; then
    echo "event trigger is not supported"
    exit_unsupported
fi

reset_tracer
do_reset

=======
>>>>>>> upstream/android-13
FEATURE=`grep stacktrace events/sched/sched_process_fork/trigger`
if [ -z "$FEATURE" ]; then
    echo "stacktrace trigger is not supported"
    exit_unsupported
fi

<<<<<<< HEAD
echo "Test stacktrace tigger"
=======
echo "Test stacktrace trigger"
>>>>>>> upstream/android-13
echo 0 > trace
echo 0 > options/stacktrace
echo 'stacktrace' > events/sched/sched_process_fork/trigger
( echo "forked")
grep "<stack trace>" trace > /dev/null || \
    fail "stacktrace trigger on sched_process_fork did not work"

reset_trigger

echo "Test stacktrace semantic errors"

! echo "stacktrace:foo" > events/sched/sched_process_fork/trigger
echo "stacktrace" > events/sched/sched_process_fork/trigger
! echo "stacktrace" > events/sched/sched_process_fork/trigger

<<<<<<< HEAD
do_reset

=======
>>>>>>> upstream/android-13
exit 0
